{"version":3,"file":"component---src-pages-articles-mdx-frontmatter-slug-js-content-file-path-article-contents-mysql-pad-comparisons-mdx-76ba91977ebd86b31124.js","mappings":"2KAiCO,MAAMA,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBC,GAC/B,MAAMC,EAAoB,aAAiBH,GAG3C,OAAO,WAAc,IAEO,mBAAfE,EACFA,EAAWC,GAGb,IAAIA,KAAsBD,IAChC,CAACC,EAAmBD,GACzB,CC3EA,SAASE,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,MACHC,IAAsBN,EAAMH,YAC/B,OAAOU,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBN,EAAYG,EAAG,KAAM,mGAAoGG,EAAAA,cAAoB,IAAK,CACrNC,KAAM,gHACL,KAAM,oIAAqI,KAAMD,EAAAA,cAAoB,OAAQ,KAAMA,EAAAA,cAAoBN,EAAYG,EAAG,KAAM,wMAAyM,KAAMG,EAAAA,cAAoBN,EAAYG,EAAG,KAAM,oPAAqP,KAAMG,EAAAA,cAAoBN,EAAYG,EAAG,KAAM,8FAA+F,KAAMG,EAAAA,cAAoBN,EAAYI,GAAI,KAAM,mBAAoB,KAAME,EAAAA,cAAoBN,EAAYG,EAAG,KAAM,8JAC/8B,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOS,QAASC,GAAaR,OAAOC,OAAO,CAAC,EAAGG,IAAsBN,EAAMH,YAC3E,OAAOa,EAAYH,EAAAA,cAAoBG,EAAWV,EAAOO,EAAAA,cAAoBR,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UCXA,MAAMW,EAAUC,IAAsB,IAArB,KAACC,EAAI,SAAEC,GAAS,EAC/B,OAAOP,EAAAA,cAAoBQ,EAAAA,EAAQ,KAAMR,EAAAA,cAAoB,MAAO,KAAMA,EAAAA,cAAoB,MAAO,CACnGS,UAAW,aACXC,GAAI,iBACHV,EAAAA,cAAoB,IAAK,KAAMM,EAAKK,IAAIC,YAAYC,QAASb,EAAAA,cAAoB,MAAO,CACzFS,UAAW,qBACVT,EAAAA,cAAoB,IAAK,CAC1BS,UAAW,aACVH,EAAKK,IAAIC,YAAYE,OAAQd,EAAAA,cAAoB,MAAO,KAAMO,IAAW,EAa/D,SAASQ,EAAiBtB,GACvC,OAAOO,EAAAA,cAAoBI,EAASX,EAAOO,EAAAA,cAAoBgB,EAAqBvB,GACtF,C,yFCMA,MA5BmB,KACf,MACMwB,GADWC,EAAAA,EAAAA,eACUC,SAASC,MAAM,KAAKC,OAAOC,SAEtD,OACI,uBAAK,aAAW,cACZ,sBAAIb,UAAU,sCACV,sBAAIA,UAAU,mBAAkB,gBAAC,KAAI,CAACc,GAAG,IAAId,UAAU,4FAA2F,SACjJQ,EAAUO,KAAI,CAACC,EAAMC,KAClB,MAAMC,EAAI,IAAOV,EAAUW,MAAM,EAAGF,EAAQ,GAAGG,KAAK,KAC9CC,EAASJ,IAAUT,EAAUc,OAAS,EAE5C,OACE,sBAAIC,IAAKL,GACP,4BAAM,OACLG,EACG,4BAAOL,GAEP,gBAAC,KAAI,CAACF,GAAII,EAAMlB,UAAU,4FAA4FgB,GAEvH,KAIb,ECRd,MAjBe,IAAmB,IAAlB,SAAElB,GAAU,EACxB,OACI,uBAAKE,UAAU,aACX,gBAAC,EAAU,MACX,2BACI,sBAAIA,UAAU,2BACV,0BAAI,gBAAC,KAAI,CAACA,UAAU,2FAA2Fc,GAAG,aAAY,iBAC9H,0BAAI,gBAAC,KAAI,CAACd,UAAU,2FAA2Fc,GAAG,UAAS,gBAGnI,4BACKhB,GAEH,C","sources":["webpack://semi-yu-blog/./node_modules/@mdx-js/react/lib/index.js","webpack://semi-yu-blog/./article-contents/mysql-pad-comparisons.mdx","webpack://semi-yu-blog/./src/pages/articles/{mdx.frontmatter__slug}.js","webpack://semi-yu-blog/./src/components/breadcrumb.js","webpack://semi-yu-blog/./src/components/layout.js"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h1: \"h1\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"모처럼 Vim을 배워보려고 이런저런 리소스를 찾아보다가, 잠깐 옆길로 새어서 MySQL에서 'a' = 'a '의 식이 참으로 평가되며, 그것이 어떻게 그런지에 대해 조사한 \", React.createElement(\"a\", {\n    href: \"https://johngrib.github.io/wiki/article/sql-char-comparison/#%EC%9A%94%EC%95%BD-%EB%B0%8F-%EA%B0%90%EC%83%81\"\n  }, \"글\"), \"을 발견했습니다. 잠깐 읽어보고 흥미로운 내용인것 같아 친구에게 공유했지요. 곧바로 그네의 MySQL 로컬환경에서 해당 쿼리를 실행해보고 거짓으로 평가된다며, 써진지 6년이 된 글을 곧이곧대로 믿으면 어떡하냐며 저를 일갈했습니다.\"), \"\\n\", React.createElement(\"img\"), \"\\n\", React.createElement(_components.p, null, \"저는 MySQL 8.0.40이 로컬에 설치되어 있어서, 바로 실행해서 확인해보았으면 될텐데, 귀찮아서 링크만 바로 공유했더니 이런 일이 일어났습니다. 그렇게 혼나고나서 로컬에서 확인해보니 실제로 거짓으로 평가됩니다. 한편, 상기된 질의문이 참으로 평가되던 때 MySQL의 버전은 5.6입니다. MySQL에 어디가 바뀌어서 이런 차이를 나타내는 걸까요.\"), \"\\n\", React.createElement(_components.p, null, \"우선, MySQL 5.6에서 식이 참으로 평가되는 까닭은 문자열 비교 방식 때문이라고 언급됩니다. 길이가 같지 않은 CHAR 자료형에 대해서는 공백을 집어넣어 동일한지를 비교한다는 것입니다. 이를 PAD SPACE 방식이라고 일컫습니다. 좀 더 자세한 사항은 상기 글에 있습니다. 하지만, 현재는 NO PAD 방식으로 문자열을 비교하고 있습니다. 그렇기 때문에 8.0.40 버전의 MySQL에서는 거짓으로 식이 평가되는 것입니다.\"), \"\\n\", React.createElement(_components.p, null, \"즉, 문자열의 비교 방식(collation)이 바뀌었습니다. 최근 버전의 MySQL에서는 더이상 공백을 붙여 비교하지 않습니다. 따라서 다른 문자열로 평가됩니다.\"), \"\\n\", React.createElement(_components.h1, null, \"비교 방식 Collation\"), \"\\n\", React.createElement(_components.p, null, \"비교 방식은 MySQL이 문자열에 대한 비교(Comparison) 연산을 진행함에 있어 그것의 결과에 대해 무엇을 더 크다고, 작다고, 같다고 평가할지를 정한 것입니다. ORDER BY 질의문을 실행하거나 WHERE 절에서 문자열이 같은지를 검사하는 등의 행위에서 사용됩니다.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"C:/Users/Junwoo/Desktop/blog/article-contents/mysql-pad-comparisons.mdx\";\nimport * as React from 'react';\nimport {graphql} from 'gatsby';\nimport Layout from '../../components/layout';\nconst Article = ({data, children}) => {\n  return React.createElement(Layout, null, React.createElement(\"div\", null, React.createElement(\"div\", {\n    className: \"title-text\",\n    id: \"article-title\"\n  }, React.createElement(\"p\", null, data.mdx.frontmatter.title)), React.createElement(\"div\", {\n    className: \"position-relative\"\n  }, React.createElement(\"p\", {\n    className: \"date-text\"\n  }, data.mdx.frontmatter.date)), React.createElement(\"div\", null, children)));\n};\nexport const query = graphql`\n    query ($id: String) {\n        mdx(id: {eq: $id}) {\n            frontmatter {\n                title\n                date(formatString: \"YYYY.MM.DD\")\n            }\n        }\n    }\n`;\nArticle\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Article, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import * as React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport { useLocation } from '@reach/router'\r\nimport '../styles/global.css'\r\n\r\nconst Breadcrumb = () => {\r\n    const location = useLocation()\r\n    const pathParts = location.pathname.split(\"/\").filter(Boolean);\r\n\r\n    return (\r\n        <nav aria-label=\"breadcrumb\">\r\n            <ol className=\"breadcrumb no-bullets nav-bar-text\">\r\n                <li className=\"breadcrumb-item\"><Link to=\"/\" className=\"link-body-emphasis link-offset-2 link-underline-opacity-0 link-underline-opacity-0-hover\">blog</Link></li>\r\n                {pathParts.map((part, index) => {\r\n                    const path = `/${pathParts.slice(0, index + 1).join(\"/\")}`;\r\n                    const isLast = index === pathParts.length - 1;\r\n                    \r\n                    return (\r\n                      <li key={path}>\r\n                        <span>&nbsp;/&nbsp;</span>\r\n                        {isLast ? (\r\n                            <span>{part}</span>\r\n                        ) : (\r\n                            <Link to={path} className=\"link-body-emphasis link-offset-2 link-underline-opacity-0 link-underline-opacity-0-hover\">{part}</Link>\r\n                        )}\r\n                      </li>\r\n                    );\r\n                })}\r\n            </ol>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Breadcrumb;","import * as React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport Breadcrumb from './breadcrumb'\r\n\r\nconst Layout = ({ children }) => {\r\n    return (\r\n        <div className=\"container\">\r\n            <Breadcrumb />\r\n            <nav>\r\n                <ul className=\"no-bullets nav-bar-text\">\r\n                    <li><Link className=\"link-body-emphasis link-offset-2 link-underline-opacity-0 link-underline-opacity-0-hover\" to=\"/articles\">글모음 articles</Link></li>\r\n                    <li><Link className=\"link-body-emphasis link-offset-2 link-underline-opacity-0 link-underline-opacity-0-hover\" to=\"/about\">대하여 about</Link></li>\r\n                </ul>\r\n            </nav>\r\n            <main>\r\n                {children}\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout"],"names":["MDXContext","useMDXComponents","components","contextComponents","_createMdxContent","props","_components","Object","assign","p","h1","_provideComponents","React","href","wrapper","MDXLayout","Article","_ref","data","children","Layout","className","id","mdx","frontmatter","title","date","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","pathParts","useLocation","pathname","split","filter","Boolean","to","map","part","index","path","slice","join","isLast","length","key"],"sourceRoot":""}